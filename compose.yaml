version: '3'
services:
  influencetechfront:
    image: robbineux/influencetech
    depends_on:
      - mongodb
      - redis
      - typesense
      - rabbitmq
      - influencetechagendaback
    restart: always
    networks:
      - mynetwork
    dns:
      - 172.19.0.1
      - 172.16.0.1
      - 10.32.32.16

    ports:
      - 8300:3000
    env_file: ./.env
    environment:
      - TZ=America/Montreal
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_DOCKER_PORT
    stdin_open: true
    command: npm run startDockerFront
    tty: true
  influencetechagendaback:
    image: robbineux/influencetech
    depends_on:
      - mongodb
      - rabbitmq
      - redis
    restart: always
    dns:
      - 172.19.0.1
      - 172.16.0.1
      - 10.32.32.16

    networks:
      - mynetwork
    ports:
      - 8333:3333
    env_file: ./.env
    environment:
      - TZ=America/Montreal
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_DOCKER_PORT
    stdin_open: true
    command: npm run startDockerAB
    tty: true
  influencetechsearch:
    image: robbineux/influencetech
    depends_on:
      - mongodb
      - redis
    restart: always
    networks:
      - mynetwork
    ports:
      - 8111:3111
    env_file: ./.env
    environment:
      - TZ=America/Montreal
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_DOCKER_PORT
    stdin_open: true
    command: npm run startDockerSearch
    tty: true
  mongodb:
    image: mongo:6.0.2
    restart: unless-stopped
    env_file: ./.env
    environment:
      - TZ=America/Montreal
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    networks:
      - mynetwork
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    volumes:
      - mongodb:/data/db
  typesense:
    image: typesense/typesense:0.25.1
    restart: on-failure
    environment:
      - TZ=America/Montreal
      - TYPESENSE_DATA_DIR=/data
      - TYPESENSE_API_KEY=$TYPESENSE_API_KEY
    dns:
      - 172.19.0.1
      - 172.16.0.1
      - 10.32.32.16
    networks:
      - mynetwork
    ports:
      - 8108:8108
    volumes:
      - typesenseData:/data
  redis:
    image: redis:7.2-rc1
    restart: always
    environment:
      - TZ=America/Montreal
    networks:
      - mynetwork
    ports:
      - 6379:6379
  rabbitmq:
    image: rabbitmq:3.12.0-management
    restart: always
    environment:
      - TZ=America/Montreal
    networks:
      - mynetwork
    ports:
      - 5672:5672
      - 15672:15672
  nginx:
    container_name: nginx
    build: ./nginx
    restart: always
    depends_on:
      - influencetechfront
    image: nginx:latest
    environment:
      - TZ=America/Montreal
    networks:
      - mynetwork
    ports:
      - 80:80
      - 443:443
volumes:
 mongodb:
 typesenseData:
   
networks:
    mynetwork: